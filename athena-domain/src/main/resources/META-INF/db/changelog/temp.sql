-- SEC_USER table
CREATE TABLE SEC_USER (
  ID       INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY,
  USERNAME VARCHAR2(255),
  PASSWORD VARCHAR2(255),
  SALT     VARCHAR2(255),
  NAME     VARCHAR2(255)
);

COMMENT ON COLUMN SEC_USER.ID IS 'Primary key';
COMMENT ON COLUMN SEC_USER.USERNAME IS 'Username';
COMMENT ON COLUMN SEC_USER.PASSWORD IS 'Password';
COMMENT ON COLUMN SEC_USER.SALT IS 'Salt for password encoding';
COMMENT ON COLUMN SEC_USER.NAME IS 'Displayed username';
-- Rollback SEC_USER table
DROP TABLE SEC_USER;

-- SEC_USER constraints
ALTER TABLE SEC_USER ADD CONSTRAINT PK_SEC_USER PRIMARY KEY (ID);
--Rollback SEC_USER constraints
ALTER TABLE SEC_USER DROP CONSTRAINT PK_SEC_USER;


-- ROLE table
CREATE TABLE SEC_ROLE (
  ID   INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY,
  NAME VARCHAR2(255)
);

COMMENT ON COLUMN SEC_ROLE.ID IS 'Primary key';
COMMENT ON COLUMN SEC_ROLE.NAME IS 'Role name';
--Rollback ROLE table
DROP TABLE SEC_ROLE;

-- SEC_ROLE constraints
ALTER TABLE SEC_ROLE ADD CONSTRAINT PK_SEC_ROLE PRIMARY KEY (ID);
-- Rollback SEC_ROLE constraints
ALTER TABLE SEC_ROLE DROP CONSTRAINT PK_SEC_ROLE;


-- SEC_USER_ROLE table
CREATE TABLE SEC_USER_ROLE (
  USER_ID INTEGER NOT NULL,
  ROLE_ID INTEGER NOT NULL
);
COMMENT ON COLUMN SEC_USER_ROLE.USER_ID IS 'Foreign key to SEC_USER';
COMMENT ON COLUMN SEC_USER_ROLE.ROLE_ID IS 'Foreign key to SEC_ROLE';
--Rollback SEC_USER_ROLE table
DROP TABLE SEC_USER_ROLE;

--SEC_USER_ROLE constraints
ALTER TABLE SEC_USER_ROLE ADD CONSTRAINT FK_SEC_USER_ROLE_USER FOREIGN KEY (USER_ID) REFERENCES SEC_USER (ID);
ALTER TABLE SEC_USER_ROLE ADD CONSTRAINT FK_SEC_USER_ROLE_ROLE FOREIGN KEY (ROLE_ID) REFERENCES SEC_ROLE (ID);
--Rollback SEC_USER_ROLE constraints
ALTER TABLE SEC_USER_ROLE DROP CONSTRAINT FK_SEC_USER_ROLE_USER;
ALTER TABLE SEC_USER_ROLE DROP CONSTRAINT FK_SEC_USER_ROLE_ROLE;


-- SEC_ACTION table
CREATE TABLE SEC_ACTION (
  ID   INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY,
  NAME VARCHAR2(255)
);
COMMENT ON COLUMN SEC_ACTION.ID IS 'Primary key';
COMMENT ON COLUMN SEC_ACTION.NAME IS 'Action name';
-- Rollback SEC_ACTION table
DROP TABLE SEC_ACTION;

-- SEC_ACTION constraints
ALTER TABLE SEC_ACTION ADD CONSTRAINT PK_SEC_ACTION PRIMARY KEY (ID);
-- Rollback SEC_ACTION constraints
ALTER TABLE SEC_ACTION DROP CONSTRAINT PK_SEC_ACTION;


-- SEC_ROLE_ACTION table
CREATE TABLE SEC_ROLE_ACTION (
  ROLE_ID   INTEGER NOT NULL,
  ACTION_ID INTEGER NOT NULL
);
COMMENT ON COLUMN SEC_ROLE_ACTION.ROLE_ID IS 'Foreign key to SEC_ROLE';
COMMENT ON COLUMN SEC_ROLE_ACTION.ACTION_ID IS 'Foreign key to SEC_ACTION';
-- Rollback SEC_ROLE_ACTION
DROP TABLE SEC_ROLE_ACTION;

-- SEC_ROLE_ACTION constraints
ALTER TABLE SEC_ROLE_ACTION ADD CONSTRAINT FK_SEC_ROLE_ACTION_ROLE FOREIGN KEY (ROLE_ID) REFERENCES SEC_ROLE (ID);
ALTER TABLE SEC_ROLE_ACTION ADD CONSTRAINT FK_SEC_ROLE_ACTION_ACTION FOREIGN KEY (ACTION_ID) REFERENCES SEC_ACTION (ID);
--Rollback SEC_ROLE_ACTION constraints
ALTER TABLE SEC_ROLE_ACTION DROP CONSTRAINT FK_SEC_ROLE_ACTION_ROLE;
ALTER TABLE SEC_ROLE_ACTION DROP CONSTRAINT FK_SEC_ROLE_ACTION_ACTION;


-- SEC_DOMAIN table
CREATE TABLE SEC_DOMAIN (
  ID   INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY,
  NAME VARCHAR2(255)
);
COMMENT ON COLUMN SEC_DOMAIN.ID IS 'Primary key';
COMMENT ON COLUMN SEC_DOMAIN.NAME IS 'Domain name';
-- Rollback SEC_DOMAIN table
DROP TABLE SEC_DOMAIN;

-- SEC_DOMAIN constraints
ALTER TABLE SEC_DOMAIN ADD CONSTRAINT PK_SEC_DOMAIN PRIMARY KEY (ID);
-- Rollback SEC_DOMAIN constraints
ALTER TABLE SEC_DOMAIN DROP CONSTRAINT PK_SEC_DOMAIN;


-- SEC_PERMISSION table
CREATE TABLE SEC_PERMISSION (
  ID          INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY,
  USER_ID     INTEGER NOT NULL,
  ACTION_ID   INTEGER NOT NULL,
  DOMAIN_ID   INTEGER NOT NULL,
  INSTANCE_ID VARCHAR2(255)
);
COMMENT ON COLUMN SEC_PERMISSION.ID IS 'Primary key';
COMMENT ON COLUMN SEC_PERMISSION.USER_ID IS 'Foreign key to SEC_USER';
COMMENT ON COLUMN SEC_PERMISSION.ACTION_ID IS 'Foreign key to SEC_ACTION';
COMMENT ON COLUMN SEC_PERMISSION.DOMAIN_ID IS 'Foreign key to SEC_DOMAIN';
COMMENT ON COLUMN SEC_PERMISSION.INSTANCE_ID IS 'Instance id, or set of ids, separated by ;';
-- Rollback SEC_PERMISSION table
DROP TABLE SEC_PERMISSION;

-- SEC_PERMISSION constraints
ALTER TABLE SEC_PERMISSION ADD CONSTRAINT PK_SEC_PERMISSION PRIMARY KEY (ID);
ALTER TABLE SEC_PERMISSION ADD CONSTRAINT SEC_PERMISSION_USER FOREIGN KEY (USER_ID) REFERENCES SEC_USER (ID);
ALTER TABLE SEC_PERMISSION ADD CONSTRAINT SEC_PERMISSION_ACTION FOREIGN KEY (ACTION_ID) REFERENCES SEC_ACTION (ID);
ALTER TABLE SEC_PERMISSION ADD CONSTRAINT SEC_PERMISSION_DOMAIN FOREIGN KEY (DOMAIN_ID) REFERENCES SEC_DOMAIN (ID);
--Rollback SEC_PERMISSION constraints
ALTER TABLE SEC_PERMISSION DROP CONSTRAINT PK_SEC_PERMISSION;
ALTER TABLE SEC_PERMISSION DROP CONSTRAINT SEC_PERMISSION_USER;
ALTER TABLE SEC_PERMISSION DROP CONSTRAINT SEC_PERMISSION_ACTION;
ALTER TABLE SEC_PERMISSION DROP CONSTRAINT SEC_PERMISSION_DOMAIN;


-- SEC_ROLE_PERMISSION table
CREATE TABLE SEC_ROLE_PERMISSION (
  ROLE_ID       INTEGER NOT NULL,
  PERMISSION_ID INTEGER NOT NULL
);
COMMENT ON COLUMN SEC_ROLE_PERMISSION.ROLE_ID IS 'Foreign key to SEC_ROLE';
COMMENT ON COLUMN SEC_ROLE_PERMISSION.PERMISSION_ID IS 'Foreign key to SEC_PERMISSION';
-- Rollback SEC_ROLE_PERMISSION
DROP TABLE SEC_ROLE_PERMISSION;

-- SEC_ROLE_PERMISSION constraints
ALTER TABLE SEC_ROLE_PERMISSION ADD CONSTRAINT SEC_ROLE_PERM_ROLE FOREIGN KEY (ROLE_ID) REFERENCES SEC_ROLE(ID);
ALTER TABLE SEC_ROLE_PERMISSION ADD CONSTRAINT SEC_ROLE_PERM_PERM FOREIGN KEY (PERMISSION_ID) REFERENCES SEC_PERMISSION(ID);
-- Rollback SEC_ROLE_PERMISSION constraints
ALTER TABLE SEC_ROLE_PERMISSION DROP CONSTRAINT SEC_ROLE_PERM_ROLE;
ALTER TABLE SEC_ROLE_PERMISSION DROP CONSTRAINT SEC_ROLE_PERM_PERM;




